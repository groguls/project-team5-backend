{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "WaterTracker",
    "description": "Swagger documentation for project WaterTracker"
  },
  "servers": [
    {
      "url": "https://watertracker-by-group5.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Water",
      "description": "Water endpoints"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "description": "Register new user",
        "requestBody": {
          "description": "Registration's object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpInRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpInRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Email in use"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Login existed user",
        "requestBody": {
          "description": "Login object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpInRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user is logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpInRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "description": "Logout existed user",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "The user is logged out"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get information about the current user",
        "description": "Get information about the current user",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Information about user found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Add or update user avatar",
        "description": "Add or update user avatar",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "requestBody": {
          "description": "User avatar image",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatarURL": {
                    "type": "string",
                    "format": "binary",
                    "description": "User's avatar image file"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user's avatar is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/users/settings": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user's data",
        "description": "Update user's data",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "requestBody": {
          "description": "Object with updated data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "The user is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/users/waterRate": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update user's water data",
        "description": "Update user's water data",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "requestBody": {
          "description": "Object with updated rate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaterRateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWaterRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/api/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add water consumption record",
        "description": "Add water volume and time of consumption",
        "requestBody": {
          "description": "Add record to database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "The record was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water records for today",
        "description": "Returns the user's water records for today from the database",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get water records"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/api/water/{month}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water records for requested month",
        "description": "Returns the user's water records for for requested month from the database",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "description": "YYYY-MM",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "2023-12"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get water records"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    },
    "/api/water/{recordId}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Edit water consumption record",
        "description": "Edit water volume and/or time of consumption",
        "requestBody": {
          "description": "Edit record in database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWaterRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edit water records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water record",
        "description": "Delete water records by ID from the database",
        "security": [
          {
            "Bearer": [
              null
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully delete water records",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWaterResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error401"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error500"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error401": {
        "description": "User must be logged in to perfotm this action",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "examples": [
              "Not authorized"
            ]
          }
        }
      },
      "Error500": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "examples": [
              "Server error"
            ]
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string",
            "description": "User avatar path",
            "examples": [
              "avatars\\436abd4ceb7a0467af393b67_avatar.jpg"
            ]
          },
          "waterRate": {
            "type": "integer",
            "description": "User's water rate",
            "examples": [
              2000,
              null
            ]
          }
        }
      },
      "UpdateWaterRateRequest": {
        "type": "object",
        "required": [
          "waterRate"
        ],
        "properties": {
          "waterRate": {
            "type": "integer",
            "description": "User's water rate",
            "examples": [
              2000
            ]
          }
        }
      },
      "UpdateWaterRateResponse": {
        "type": "object",
        "properties": {
          "waterRate": {
            "type": "integer",
            "description": "User's water rate",
            "examples": [
              2000
            ]
          }
        }
      },
      "SignUpInRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "format": "password",
            "examples": [
              "qwerty123"
            ]
          }
        }
      },
      "SignUpInResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Backend-generated unique identifier",
            "examples": [
              "346t7o5687g848eababc0c16"
            ]
          },
          "token": {
            "type": "string",
            "description": "Bearer token",
            "examples": [
              "feJhbGciOiJIUzI1NiIsInR5cCI6IgtXVCJ4.eyJpZCI6IjY1OGQ3MTZiMGZiOGY0ZWE3MTgxYjE1ZCIsImlhdCI6MTcwMzc2OTM3OSwiZXhwIjoxNzA0Mzc0MTc3fQ.a0btrlNeqem40KjOgtWSPVscL9KNz8kIGlIHeh0Ersw"
            ]
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User avatar path",
                "examples": [
                  "avatars\\436abd4ceb7a0467af393b67_avatar.jpg"
                ]
              },
              "waterRate": {
                "type": "integer",
                "description": "User's water rate",
                "examples": [
                  2000
                ]
              }
            }
          }
        }
      },
      "AvatarsResponse": {
        "type": "object",
        "description": "User avatar file",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User avatar path",
            "examples": [
              "avatars\\436abd4ceb7a0467af393b67_avatar.jpg"
            ]
          }
        }
      },
      "AddWaterRequest": {
        "type": "object",
        "required": [
          "waterVolume",
          "date"
        ],
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "The amount of water consumed at a time",
            "examples": [
              150
            ]
          },
          "date": {
            "type": "string",
            "description": "Time of consumption",
            "examples": [
              "12:00"
            ]
          }
        }
      },
      "EditWaterRequest": {
        "type": "object",
        "oneOf": [
          {
            "required": [
              "waterVolume"
            ]
          },
          {
            "required": [
              "date"
            ]
          }
        ],
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "The amount of water consumed at a time",
            "examples": [
              150
            ]
          },
          "date": {
            "type": "string",
            "description": "Time of consumption",
            "examples": [
              "12:00"
            ]
          }
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "The amount of water added to the database",
            "examples": [
              150
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Time of consumption added",
            "examples": [
              "2023-12-29T15:12:15.000Z"
            ]
          },
          "user": {
            "type": "string",
            "description": "User ID for reference",
            "examples": [
              "658c5398e3e9eefd204b132f"
            ]
          },
          "_id": {
            "type": "string",
            "description": "Record ID",
            "examples": [
              "658eabae4f2cacdd1d946926"
            ]
          }
        }
      },
      "DeleteWaterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "examples": [
              "Record deleted"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}